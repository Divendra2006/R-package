% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_db_map.R
\name{create.DB.map}
\alias{create.DB.map}
\title{Create Database Map}
\usage{
create.DB.map(tables, by, join_types = "inner", aggregations = NULL)
}
\arguments{
\item{tables}{A named list of data.tables, where the names are the table names.}

\item{by}{A list of character vectors specifying the linking variables for each pair of tables.
Each element of the list should be a named vector with two elements:
`by.x` (linking variable in the first table) and `by.y` (linking variable in the second table).}

\item{join_types}{A character vector specifying the type of join for each pair of tables.
Possible values: "inner", "outer", "left", "right".
If a single value is provided, it will be used for all pairs.}

\item{aggregations}{A list of aggregation functions to apply to each table.
Each element of the list should be a named list with two elements:
`x` (aggregation for the first table) and `y` (aggregation for the second table).
Default is `NULL` (no aggregation).}
}
\value{
A data.table with the following columns:
  - `table_x`: Name of the first table.
  - `table_y`: Name of the second table.
  - `can_join`: Logical indicating whether the tables can be joined.
  - `by.x`: Linking variable in the first table.
  - `by.y`: Linking variable in the second table.
  - `join_type`: Type of join.
  - `agg_x`: Aggregation for the first table (if specified).
  - `agg_y`: Aggregation for the second table (if specified).
}
\description{
Construct a map of relationships between tables in a database. The map specifies
which tables can be joined, the linking variables, the type of join, and optional
aggregations within each table.
}
\examples{
library(data.table)
table1 <- data.table(id = c(1, 2), value1 = c("A", "B"))
table2 <- data.table(id = c(2, 3), value2 = c("C", "D"))
tables <- list(table1 = table1, table2 = table2)
by <- list(c(by.x = "id", by.y = "id"))
db_map <- create.DB.map(tables, by, join_types = "inner")
print(db_map)

}
